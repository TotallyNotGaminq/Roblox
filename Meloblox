local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/AikaV3rm/UiLib/master/Lib.lua')))()

local tools = library:CreateWindow("Tools") -- Creates the window
local teleport = library:CreateWindow("Teleport")

local city = teleport:CreateFolder("City")
local zone = teleport:CreateFolder("Zone")
local boss = teleport:CreateFolder("Boss")

local loot = tools:CreateFolder("Loot") -- Creates the folder(U will put here your buttons,etc)
local useless = tools:CreateFolder("Useless")

loot:Button("Loot All",function()
    for i,v in pairs(game:GetService("Workspace").RunTime.GroundLoot:GetChildren()) do
        if v.ClassName == "Part" or v.ClassName == "MeshPart" then
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
            wait()
            local values = string.split(v.Name, "_")
            game:GetService("ReplicatedStorage").Knit.Services.GroundItemService.RF.PickUpItem:InvokeServer(values[3])
        end
    end
end)

useless:DestroyGui()

city:Button("Shop",function() --true/false, replaces the current title "Dropdown" with the option that t
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(275, 4, -13)
end)

city:Button("Bank",function() --true/false, replaces the current title "Dropdown" with the option that t
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(275, 4, 143)
end)

zone:Button("Zone 1",function() --true/false, replaces the current title "Dropdown" with the option that t
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-154, 4, 39)
end)

zone:Button("Zone 2",function() --true/false, replaces the current title "Dropdown" with the option that t
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-333, 4, 794)
end)

zone:Button("Zone 3",function() --true/false, replaces the current title "Dropdown" with the option that t
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-796, 4, 1163)
end)

boss:Button("Blob",function() --true/false, replaces the current title "Dropdown" with the option that t
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-321, 23, -9)
end)
--[[
b:Toggle("Toggle",function(bool)
    shared.toggle = bool
    print(shared.bool)
end)

b:Slider("Slider",{
    min = 10; -- min value of the slider
    max = 50; -- max value of the slider
    precise = true; -- max 2 decimals
},function(value)
    print(value)
end)

b:Dropdown("Dropdown",{"A","B","C"},true,function(mob) --true/false, replaces the current title "Dropdown" with the option that t
    print(mob)
end)

b:Bind("Bind",Enum.KeyCode.C,function() --Default bind
    print("Yes")
end)

b:ColorPicker("ColorPicker",Color3.fromRGB(255,0,0),function(color) --Default color
    print(color)
end)

b:Box("Box","number",function(value) -- "number" or "string"
    print(value)
end)

b:DestroyGui()


How to refresh a dropdown:
1)Create the dropdown and save it in a variable
local yourvariable = b:Dropdown("Hi",yourtable,function(a)
    print(a)
end)
2)Refresh it using the function
yourvariable:Refresh(yourtable)
How to refresh a label:
1)Create your label and save it in a variable
local yourvariable = b:Label("Pretty Useless NGL",{
    TextSize = 25; -- Self Explaining
    TextColor = Color3.fromRGB(255,255,255);
    BgColor = Color3.fromRGB(69,69,69);
})
2)Refresh it using the function
yourvariable:Refresh("Hello") It will only change the text ofc
]]
